{"version":3,"sources":["logo.jpg","components/LaunchItem.js","components/MissionKey.js","components/Launches.js","components/Launch.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","LaunchItem","_ref","_ref$launch","launch","flight_number","mission_name","launch_date_local","launch_year","launch_success","react_default","a","createElement","className","classNames","text-success","text-danger","dist_default","format","react_router_dom","to","concat","MissonKey","LAUNCHES_QUERY","gql","_templateObject","Launches","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react","react_apollo_esm","query","loading","error","data","console","log","launches","map","Component","LAUNCH_QUERY","Launch_templateObject","Launch","props","match","params","parseInt","variables","_data$launch","_data$launch$rocket","rocket","rocket_id","rocket_name","rocket_type","client","ApolloClient","uri","App","src","logo","alt","style","width","display","margin","react_router","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.499b2dfe.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.7dab9996.jpg\";","import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport Moment from \"react-moment\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function LaunchItem({\r\n  launch: {\r\n    flight_number,\r\n    mission_name,\r\n    launch_year,\r\n    launch_date_local,\r\n    launch_success\r\n  }\r\n}) {\r\n  return (\r\n    <div className=\"card card-body mb-3\">\r\n      <div className=\"row\">\r\n        <div className=\"col-xs-9 col-sm-9 col-md-9 col-lg-9\">\r\n          <h4>\r\n            Mission: \r\n            <span\r\n              className={classNames({\r\n                \"text-success\": launch_success,\r\n                \"text-danger\": !launch_success\r\n              })}\r\n            >\r\n              {mission_name}\r\n            </span>\r\n          </h4>\r\n          <p>\r\n            Date: <Moment format=\"YYYY-MM-DD\">{launch_date_local}</Moment>\r\n          </p>\r\n        </div>\r\n\r\n        <div className=\"col-xs-3 col-sm-3 col-md-3 col-lg-3\">\r\n          <Link to={`/launch/${flight_number}`} className=\"btn btn-secondary\">\r\n            Launch Detail\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function MissonKey() {\r\n  return (\r\n    <div className=\"my-3\">\r\n      <p>\r\n        <span className=\"px-3 mr-2 bg-success\" /> = Sucess\r\n      </p>\r\n      <p>\r\n        <span className=\"px-3 mr-2 bg-danger\" /> = Fail\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component, Fragment } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { Query } from \"react-apollo\";\r\n\r\nimport LaunchItem from \"./LaunchItem\";\r\nimport MissionKey from \"./MissionKey\";\r\n\r\n\r\nconst LAUNCHES_QUERY = gql`\r\n  query LaunchesQuery {\r\n    launches {\r\n      flight_number\r\n      mission_name\r\n      launch_year\r\n      launch_date_local\r\n      launch_success\r\n    }\r\n  }\r\n`;\r\n\r\nexport class Launches extends Component {\r\n  render() {\r\n    return <Fragment>\r\n        <h1 className=\"display-4 my-3\">\r\n            Launches\r\n        </h1>\r\n        <MissionKey/>\r\n        <Query query={LAUNCHES_QUERY}>\r\n            {\r\n                ({loading, error, data})=>{\r\n                    if(loading)return <h4>Loading ...</h4>\r\n                    if(error) console.log(error);\r\n\r\n                    return (\r\n                      <Fragment>\r\n                        {data.launches.map(launch => (\r\n                          <LaunchItem\r\n                            key={launch.flight_number}\r\n                            launch={launch}\r\n                          />\r\n                        ))}\r\n                      </Fragment>\r\n                    );\r\n                }\r\n            }\r\n        </Query>\r\n    </Fragment>;\r\n  }\r\n}\r\n\r\nexport default Launches;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport gql from \"graphql-tag\";\r\nimport { Query } from \"react-apollo\";\r\nimport { Link } from \"react-router-dom\";\r\nimport classNames from \"classnames\";\r\n\r\nconst LAUNCH_QUERY = gql`\r\n  query LaunchesQuery($flight_number: Int!) {\r\n    launch(flight_number: $flight_number) {\r\n      flight_number\r\n      mission_name\r\n      launch_year\r\n      launch_date_local\r\n      launch_success\r\n      rocket {\r\n        rocket_id\r\n        rocket_name\r\n        rocket_type\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport class Launch extends Component {\r\n  render() {\r\n    let { flight_number } = this.props.match.params;\r\n    flight_number = parseInt(flight_number);\r\n    return (\r\n      <Fragment>\r\n        <Query query={LAUNCH_QUERY} variables={{ flight_number }}>\r\n          {({ loading, error, data }) => {\r\n            if (loading) return <h4>Loading ...</h4>;\r\n            if (error) console.log(error);\r\n\r\n            const {\r\n              flight_number,\r\n              mission_name,\r\n              launch_year,\r\n              launch_success,\r\n              rocket: { rocket_id, rocket_name, rocket_type }\r\n            } = data.launch;\r\n\r\n            return (\r\n              <div>\r\n                <h1 className=\"display-4 my-3\">\r\n                  <span className=\"text-dark\">Mission:</span>\r\n                  {mission_name}\r\n                </h1>\r\n                <h4 className=\"mb-3\">Launch Details</h4>\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item \">\r\n                    Flight number: {flight_number}\r\n                  </li>\r\n                  <li className=\"list-group-item \">\r\n                    Launch Year: {launch_year}\r\n                  </li>\r\n                  <li className=\"list-group-item \">\r\n                    Launch Success: \r\n                    <span\r\n                      className={classNames({\r\n                        \"text-success\": launch_success,\r\n                        \"text-danger\": !launch_success\r\n                      })}\r\n                    >\r\n                      {launch_success ? \" Yes\" : \" No\"}\r\n                    </span>\r\n                  </li>\r\n                </ul>\r\n\r\n                <h4 className=\"my-3\">Rocket Detail</h4>\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item \">\r\n                   Rocket id: {rocket_id}\r\n                  </li>\r\n                  <li className=\"list-group-item \">\r\n                    Rocket name: {rocket_name}\r\n                  </li>\r\n                  <li className=\"list-group-item \">\r\n                      Rocket type : {rocket_type}\r\n                  </li>\r\n                </ul>\r\n                <hr/>\r\n                <Link to=\"/\" className=\"btn btn-secondary\">\r\n                    Back\r\n                </Link>\r\n              </div>\r\n            );\r\n          }}\r\n        </Query>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Launch;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport logo from \"./logo.jpg\";\n\nimport ApolloClient from \"apollo-boost\";\nimport { ApolloProvider } from \"react-apollo\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport Launches from \"./components/Launches\";\nimport Launch from \"./components/Launch\";\n\nconst client = new ApolloClient({\n  uri: \"/graphql\"\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"container\">\n          <img\n            src={logo}\n            alt=\"SpaceX\"\n            style={{\n              width: 300,\n              display: \"block\",\n              margin: \"auto\"\n            }}\n          />\n          <Route exact path=\"/\" component={Launches} />\n          <Route\n            exact\n            path=\"/launch/:flight_number\"\n            component={Launch}\n          />\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}